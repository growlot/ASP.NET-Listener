
// <auto-generated>
#pragma warning disable 1591
namespace AMSLLC.Listener.Persistence.Metadata {
using System.Collections.Generic;

public static class DBMetadata {
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: TransactionLogState
	/// <para />Class Name: TransactionLogState
	/// <para />Is View: False
	/// </summary>
	public static readonly TransactionLogStateTable TransactionLogState = new TransactionLogStateTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: VersionInfo
	/// <para />Class Name: VersionInfo
	/// <para />Is View: False
	/// </summary>
	public static readonly VersionInfoTable VersionInfo = new VersionInfoTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: TransactionType
	/// <para />Class Name: TransactionType
	/// <para />Is View: False
	/// </summary>
	public static readonly TransactionTypeTable TransactionType = new TransactionTypeTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: TransactionStatus
	/// <para />Class Name: TransactionStatus
	/// <para />Is View: False
	/// </summary>
	public static readonly TransactionStatusTable TransactionStatus = new TransactionStatusTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: TransactionState
	/// <para />Class Name: TransactionState
	/// <para />Is View: False
	/// </summary>
	public static readonly TransactionStateTable TransactionState = new TransactionStateTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: TransactionSource
	/// <para />Class Name: TransactionSource
	/// <para />Is View: False
	/// </summary>
	public static readonly TransactionSourceTable TransactionSource = new TransactionSourceTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: ServiceType
	/// <para />Class Name: ServiceType
	/// <para />Is View: False
	/// </summary>
	public static readonly ServiceTypeTable ServiceType = new ServiceTypeTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: Company
	/// <para />Class Name: Company
	/// <para />Is View: False
	/// </summary>
	public static readonly CompanyTable Company = new CompanyTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: Device
	/// <para />Class Name: Device
	/// <para />Is View: False
	/// </summary>
	public static readonly DeviceTable Device = new DeviceTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: DeviceTest
	/// <para />Class Name: DeviceTest
	/// <para />Is View: False
	/// </summary>
	public static readonly DeviceTestTable DeviceTest = new DeviceTestTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: TransactionLog
	/// <para />Class Name: TransactionLog
	/// <para />Is View: False
	/// </summary>
	public static readonly TransactionLogTable TransactionLog = new TransactionLogTable();	
	/// <summary>
	/// <para />Schema: dbo
	/// <para />Table Name: __MigrationHistory
	/// <para />Class Name: __MigrationHistory
	/// <para />Is View: False
	/// </summary>
	public static readonly MigrationhistoryTable Migrationhistory = new MigrationhistoryTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSYS_VALIDATION
	/// <para />Class Name: TSYS_VALIDATION
	/// <para />Is View: False
	/// </summary>
	public static readonly SysValidationTable SysValidation = new SysValidationTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tfirmware_label
	/// <para />Class Name: tfirmware_label
	/// <para />Is View: False
	/// </summary>
	public static readonly FirmwareLabelTable FirmwareLabel = new FirmwareLabelTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tlistener_config
	/// <para />Class Name: tlistener_config
	/// <para />Is View: False
	/// </summary>
	public static readonly ListenerConfigTable ListenerConfig = new ListenerConfigTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tbarcode_ct
	/// <para />Class Name: tbarcode_ct
	/// <para />Is View: False
	/// </summary>
	public static readonly BarcodeCtTable BarcodeCt = new BarcodeCtTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TTRACKING
	/// <para />Class Name: TTRACKING
	/// <para />Is View: False
	/// </summary>
	public static readonly TrackingTable Tracking = new TrackingTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tbarcode_pt
	/// <para />Class Name: tbarcode_pt
	/// <para />Is View: False
	/// </summary>
	public static readonly BarcodePtTable BarcodePt = new BarcodePtTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TTRACKING_IN
	/// <para />Class Name: TTRACKING_IN
	/// <para />Is View: False
	/// </summary>
	public static readonly TrackingInTable TrackingIn = new TrackingInTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tlistener_transaction_log
	/// <para />Class Name: tlistener_transaction_log
	/// <para />Is View: False
	/// </summary>
	public static readonly ListenerTransactionLogTable ListenerTransactionLog = new ListenerTransactionLogTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TTRACKING_OUT
	/// <para />Class Name: TTRACKING_OUT
	/// <para />Is View: False
	/// </summary>
	public static readonly TrackingOutTable TrackingOut = new TrackingOutTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tlistener_transaction_source
	/// <para />Class Name: tlistener_transaction_source
	/// <para />Is View: False
	/// </summary>
	public static readonly ListenerTransactionSourceTable ListenerTransactionSource = new ListenerTransactionSourceTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TLOT_PERCENT_DEF
	/// <para />Class Name: TLOT_PERCENT_DEF
	/// <para />Is View: False
	/// </summary>
	public static readonly LotPercentDefTable LotPercentDef = new LotPercentDefTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TLOT_ACCEPT_QUALITY_LEVEL
	/// <para />Class Name: TLOT_ACCEPT_QUALITY_LEVEL
	/// <para />Is View: False
	/// </summary>
	public static readonly LotAcceptQualityLevelTable LotAcceptQualityLevel = new LotAcceptQualityLevelTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TIMPORT_EXPORT_OPTIONS
	/// <para />Class Name: TIMPORT_EXPORT_OPTION
	/// <para />Is View: False
	/// </summary>
	public static readonly ImportExportOptionsTable ImportExportOptions = new ImportExportOptionsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TNEW_BATCH
	/// <para />Class Name: TNEW_BATCH
	/// <para />Is View: False
	/// </summary>
	public static readonly NewBatchTable NewBatch = new NewBatchTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_TRANSDUCER_HIST
	/// <para />Class Name: TEQP_TRANSDUCER_HIST
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpTransducerHistTable EqpTransducerHist = new EqpTransducerHistTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TLOT_SIZE_LOOKUP
	/// <para />Class Name: TLOT_SIZE_LOOKUP
	/// <para />Is View: False
	/// </summary>
	public static readonly LotSizeLookupTable LotSizeLookup = new LotSizeLookupTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TIMPORT_EXPORT_DEFINITIONS
	/// <para />Class Name: TIMPORT_EXPORT_DEFINITION
	/// <para />Is View: False
	/// </summary>
	public static readonly ImportExportDefinitionsTable ImportExportDefinitions = new ImportExportDefinitionsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: pbcatcol
	/// <para />Class Name: pbcatcol
	/// <para />Is View: False
	/// </summary>
	public static readonly PbcatcolTable Pbcatcol = new PbcatcolTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_TOTALIZER_HIST
	/// <para />Class Name: TEQP_TOTALIZER_HIST
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpTotalizerHistTable EqpTotalizerHist = new EqpTotalizerHistTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: pbcatfmt
	/// <para />Class Name: pbcatfmt
	/// <para />Is View: False
	/// </summary>
	public static readonly PbcatfmtTable Pbcatfmt = new PbcatfmtTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: pbcatvld
	/// <para />Class Name: pbcatvld
	/// <para />Is View: False
	/// </summary>
	public static readonly PbcatvldTable Pbcatvld = new PbcatvldTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_TRANSDUCER
	/// <para />Class Name: TEQP_TRANSDUCER
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpTransducerTable EqpTransducer = new EqpTransducerTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: pbcatedt
	/// <para />Class Name: pbcatedt
	/// <para />Is View: False
	/// </summary>
	public static readonly PbcatedtTable Pbcatedt = new PbcatedtTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_TOTALIZER
	/// <para />Class Name: TEQP_TOTALIZER
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpTotalizerTable EqpTotalizer = new EqpTotalizerTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: pbcattbl
	/// <para />Class Name: pbcattbl
	/// <para />Is View: False
	/// </summary>
	public static readonly PbcattblTable Pbcattbl = new PbcattblTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_RECORDER_HIST
	/// <para />Class Name: TEQP_RECORDER_HIST
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpRecorderHistTable EqpRecorderHist = new EqpRecorderHistTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_RECORDER
	/// <para />Class Name: TEQP_RECORDER
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpRecorderTable EqpRecorder = new EqpRecorderTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_PT_HIST
	/// <para />Class Name: TEQP_PT_HIST
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpPtHistTable EqpPtHist = new EqpPtHistTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_PT
	/// <para />Class Name: TEQP_PT
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpPtTable EqpPt = new EqpPtTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_METER_HIST
	/// <para />Class Name: TEQP_METER_HIST
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpMeterHistTable EqpMeterHist = new EqpMeterHistTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TLOCATION
	/// <para />Class Name: TLOCATION
	/// <para />Is View: False
	/// </summary>
	public static readonly LocationTable Location = new LocationTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TTAMPER
	/// <para />Class Name: TTAMPER
	/// <para />Is View: False
	/// </summary>
	public static readonly TamperTable Tamper = new TamperTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TMANUFACTURERCODE
	/// <para />Class Name: TMANUFACTURERCODE
	/// <para />Is View: False
	/// </summary>
	public static readonly ManufacturercodeTable Manufacturercode = new ManufacturercodeTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TMETER_CODE
	/// <para />Class Name: TMETER_CODE
	/// <para />Is View: False
	/// </summary>
	public static readonly MeterCodeTable MeterCode = new MeterCodeTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tevent_triggers
	/// <para />Class Name: tevent_trigger
	/// <para />Is View: False
	/// </summary>
	public static readonly EventTriggersTable EventTriggers = new EventTriggersTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tmeter_emulation
	/// <para />Class Name: tmeter_emulation
	/// <para />Is View: False
	/// </summary>
	public static readonly MeterEmulationTable MeterEmulation = new MeterEmulationTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TTRANSFORMER_CODE_CT
	/// <para />Class Name: TTRANSFORMER_CODE_CT
	/// <para />Is View: False
	/// </summary>
	public static readonly TransformerCodeCtTable TransformerCodeCt = new TransformerCodeCtTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TMETER_POWER_SETUP
	/// <para />Class Name: TMETER_POWER_SETUP
	/// <para />Is View: False
	/// </summary>
	public static readonly MeterPowerSetupTable MeterPowerSetup = new MeterPowerSetupTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TTRANSFORMER_CODE_PT
	/// <para />Class Name: TTRANSFORMER_CODE_PT
	/// <para />Is View: False
	/// </summary>
	public static readonly TransformerCodePtTable TransformerCodePt = new TransformerCodePtTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TMETER_TEST_RESULTS
	/// <para />Class Name: TMETER_TEST_RESULT
	/// <para />Is View: False
	/// </summary>
	public static readonly MeterTestResultsTable MeterTestResults = new MeterTestResultsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tsite_metrics
	/// <para />Class Name: tsite_metric
	/// <para />Is View: False
	/// </summary>
	public static readonly SiteMetricsTable SiteMetrics = new SiteMetricsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tmeter_test_sequence
	/// <para />Class Name: tmeter_test_sequence
	/// <para />Is View: False
	/// </summary>
	public static readonly MeterTestSequenceTable MeterTestSequence = new MeterTestSequenceTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tsite_wiring_check
	/// <para />Class Name: tsite_wiring_check
	/// <para />Is View: False
	/// </summary>
	public static readonly SiteWiringCheckTable SiteWiringCheck = new SiteWiringCheckTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TMFR
	/// <para />Class Name: TMFR
	/// <para />Is View: False
	/// </summary>
	public static readonly MfrTable Mfr = new MfrTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TMAP_WINBOARD2
	/// <para />Class Name: TMAP_WINBOARD2
	/// <para />Is View: False
	/// </summary>
	public static readonly MapWinboard2Table MapWinboard2 = new MapWinboard2Table();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: trma_batch_out
	/// <para />Class Name: trma_batch_out
	/// <para />Is View: False
	/// </summary>
	public static readonly RmaBatchOutTable RmaBatchOut = new RmaBatchOutTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TMULTIMEDIA
	/// <para />Class Name: TMULTIMEDIUM
	/// <para />Is View: False
	/// </summary>
	public static readonly MultimediaTable Multimedia = new MultimediaTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: trma_eqp
	/// <para />Class Name: trma_eqp
	/// <para />Is View: False
	/// </summary>
	public static readonly RmaEqpTable RmaEqp = new RmaEqpTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TREPAIR
	/// <para />Class Name: TREPAIR
	/// <para />Is View: False
	/// </summary>
	public static readonly RepairTable Repair = new RepairTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TOWNER
	/// <para />Class Name: TOWNER
	/// <para />Is View: False
	/// </summary>
	public static readonly OwnerTable Owner = new OwnerTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tmetadata
	/// <para />Class Name: tmetadatum
	/// <para />Is View: False
	/// </summary>
	public static readonly MetadataTable Metadata = new MetadataTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TPROCESS_FLOW
	/// <para />Class Name: TPROCESS_FLOW
	/// <para />Is View: False
	/// </summary>
	public static readonly ProcessFlowTable ProcessFlow = new ProcessFlowTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TPT_TEST_RESULTS
	/// <para />Class Name: TPT_TEST_RESULT
	/// <para />Is View: False
	/// </summary>
	public static readonly PtTestResultsTable PtTestResults = new PtTestResultsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TREAD_SET
	/// <para />Class Name: TREAD_SET
	/// <para />Is View: False
	/// </summary>
	public static readonly ReadSetTable ReadSet = new ReadSetTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TREADING
	/// <para />Class Name: TREADING
	/// <para />Is View: False
	/// </summary>
	public static readonly ReadingTable Reading = new ReadingTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSAMPLE_LIST
	/// <para />Class Name: TSAMPLE_LIST
	/// <para />Is View: False
	/// </summary>
	public static readonly SampleListTable SampleList = new SampleListTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSAMPLE_LIST_ARCH
	/// <para />Class Name: TSAMPLE_LIST_ARCH
	/// <para />Is View: False
	/// </summary>
	public static readonly SampleListArchTable SampleListArch = new SampleListArchTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tdefault_values
	/// <para />Class Name: tdefault_value
	/// <para />Is View: False
	/// </summary>
	public static readonly DefaultValuesTable DefaultValues = new DefaultValuesTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSECURITY_GROUPS
	/// <para />Class Name: TSECURITY_GROUP
	/// <para />Is View: False
	/// </summary>
	public static readonly SecurityGroupsTable SecurityGroups = new SecurityGroupsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSECURITY_RIGHTS
	/// <para />Class Name: TSECURITY_RIGHT
	/// <para />Is View: False
	/// </summary>
	public static readonly SecurityRightsTable SecurityRights = new SecurityRightsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSECURITY_USERS
	/// <para />Class Name: TSECURITY_USER
	/// <para />Is View: False
	/// </summary>
	public static readonly SecurityUsersTable SecurityUsers = new SecurityUsersTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tred_tag
	/// <para />Class Name: tred_tag
	/// <para />Is View: False
	/// </summary>
	public static readonly RedTagTable RedTag = new RedTagTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSELECTION_PROGRAM
	/// <para />Class Name: TSELECTION_PROGRAM
	/// <para />Is View: False
	/// </summary>
	public static readonly SelectionProgramTable SelectionProgram = new SelectionProgramTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tred_tag_control
	/// <para />Class Name: tred_tag_control
	/// <para />Is View: False
	/// </summary>
	public static readonly RedTagControlTable RedTagControl = new RedTagControlTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSELECTION_PROGRAM_GROUP
	/// <para />Class Name: TSELECTION_PROGRAM_GROUP
	/// <para />Is View: False
	/// </summary>
	public static readonly SelectionProgramGroupTable SelectionProgramGroup = new SelectionProgramGroupTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSHOP_GOALS
	/// <para />Class Name: TSHOP_GOAL
	/// <para />Is View: False
	/// </summary>
	public static readonly ShopGoalsTable ShopGoals = new ShopGoalsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tlistener_transaction_state
	/// <para />Class Name: tlistener_transaction_state
	/// <para />Is View: False
	/// </summary>
	public static readonly ListenerTransactionStateTable ListenerTransactionState = new ListenerTransactionStateTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSITE
	/// <para />Class Name: TSITE
	/// <para />Is View: False
	/// </summary>
	public static readonly SiteTable Site = new SiteTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tlistener_transaction_statistics
	/// <para />Class Name: tlistener_transaction_statistic
	/// <para />Is View: False
	/// </summary>
	public static readonly ListenerTransactionStatisticsTable ListenerTransactionStatistics = new ListenerTransactionStatisticsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSITE_COMMENTS
	/// <para />Class Name: TSITE_COMMENT
	/// <para />Is View: False
	/// </summary>
	public static readonly SiteCommentsTable SiteComments = new SiteCommentsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tlistener_transaction_status
	/// <para />Class Name: tlistener_transaction_status
	/// <para />Is View: False
	/// </summary>
	public static readonly ListenerTransactionStatusTable ListenerTransactionStatus = new ListenerTransactionStatusTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSITE_HIST
	/// <para />Class Name: TSITE_HIST
	/// <para />Is View: False
	/// </summary>
	public static readonly SiteHistTable SiteHist = new SiteHistTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tlistener_transaction_type
	/// <para />Class Name: tlistener_transaction_type
	/// <para />Is View: False
	/// </summary>
	public static readonly ListenerTransactionTypeTable ListenerTransactionType = new ListenerTransactionTypeTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSITE_MULTIMEDIA
	/// <para />Class Name: TSITE_MULTIMEDIUM
	/// <para />Is View: False
	/// </summary>
	public static readonly SiteMultimediaTable SiteMultimedia = new SiteMultimediaTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tsocket_mapping
	/// <para />Class Name: tsocket_mapping
	/// <para />Is View: False
	/// </summary>
	public static readonly SocketMappingTable SocketMapping = new SocketMappingTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSTATUS
	/// <para />Class Name: TSTATUS
	/// <para />Is View: False
	/// </summary>
	public static readonly StatusTable Status = new StatusTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tlistener_config_notifications
	/// <para />Class Name: tlistener_config_notification
	/// <para />Is View: False
	/// </summary>
	public static readonly ListenerConfigNotificationsTable ListenerConfigNotifications = new ListenerConfigNotificationsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TSYS_CONTROL
	/// <para />Class Name: TSYS_CONTROL
	/// <para />Is View: False
	/// </summary>
	public static readonly SysControlTable SysControl = new SysControlTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: ttransducer_test_results
	/// <para />Class Name: ttransducer_test_result
	/// <para />Is View: False
	/// </summary>
	public static readonly TransducerTestResultsTable TransducerTestResults = new TransducerTestResultsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TBARCODE
	/// <para />Class Name: TBARCODE
	/// <para />Is View: False
	/// </summary>
	public static readonly BarcodeTable Barcode = new BarcodeTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tmeter_limit_set
	/// <para />Class Name: tmeter_limit_set
	/// <para />Is View: False
	/// </summary>
	public static readonly MeterLimitSetTable MeterLimitSet = new MeterLimitSetTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TVALIDATION
	/// <para />Class Name: TVALIDATION
	/// <para />Is View: False
	/// </summary>
	public static readonly ValidationTable Validation = new ValidationTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TBARCODE_CONTROL
	/// <para />Class Name: TBARCODE_CONTROL
	/// <para />Is View: False
	/// </summary>
	public static readonly BarcodeControlTable BarcodeControl = new BarcodeControlTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: taudit_log
	/// <para />Class Name: taudit_log
	/// <para />Is View: False
	/// </summary>
	public static readonly AuditLogTable AuditLog = new AuditLogTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TVENDOR
	/// <para />Class Name: TVENDOR
	/// <para />Is View: False
	/// </summary>
	public static readonly VendorTable Vendor = new VendorTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tkyz
	/// <para />Class Name: tkyz
	/// <para />Is View: False
	/// </summary>
	public static readonly KyzTable Kyz = new KyzTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TVENDOR_CONTACT
	/// <para />Class Name: TVENDOR_CONTACT
	/// <para />Is View: False
	/// </summary>
	public static readonly VendorContactTable VendorContact = new VendorContactTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: trma_batch_in
	/// <para />Class Name: trma_batch_in
	/// <para />Is View: False
	/// </summary>
	public static readonly RmaBatchInTable RmaBatchIn = new RmaBatchInTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tharmonic_configuration
	/// <para />Class Name: tharmonic_configuration
	/// <para />Is View: False
	/// </summary>
	public static readonly HarmonicConfigurationTable HarmonicConfiguration = new HarmonicConfigurationTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TBARCODE_LABEL
	/// <para />Class Name: TBARCODE_LABEL
	/// <para />Is View: False
	/// </summary>
	public static readonly BarcodeLabelTable BarcodeLabel = new BarcodeLabelTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tversion
	/// <para />Class Name: tversion
	/// <para />Is View: False
	/// </summary>
	public static readonly VersionTable Version = new VersionTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TBARCODE_LABEL_DEF
	/// <para />Class Name: TBARCODE_LABEL_DEF
	/// <para />Is View: False
	/// </summary>
	public static readonly BarcodeLabelDefTable BarcodeLabelDef = new BarcodeLabelDefTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tharmonic_config_data
	/// <para />Class Name: tharmonic_config_datum
	/// <para />Is View: False
	/// </summary>
	public static readonly HarmonicConfigDataTable HarmonicConfigData = new HarmonicConfigDataTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TVERSION_HISTORY
	/// <para />Class Name: TVERSION_HISTORY
	/// <para />Is View: False
	/// </summary>
	public static readonly VersionHistoryTable VersionHistory = new VersionHistoryTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TWORKSTATION
	/// <para />Class Name: TWORKSTATION
	/// <para />Is View: False
	/// </summary>
	public static readonly WorkstationTable Workstation = new WorkstationTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TCIRCUIT
	/// <para />Class Name: TCIRCUIT
	/// <para />Is View: False
	/// </summary>
	public static readonly CircuitTable Circuit = new CircuitTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TTEST_CARD
	/// <para />Class Name: TTEST_CARD
	/// <para />Is View: False
	/// </summary>
	public static readonly TestCardTable TestCard = new TestCardTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TRATIO
	/// <para />Class Name: TRATIO
	/// <para />Is View: False
	/// </summary>
	public static readonly RatioTable Ratio = new RatioTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_REFERENCE
	/// <para />Class Name: TEQP_REFERENCE
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpReferenceTable EqpReference = new EqpReferenceTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TCIRCUIT_HIST
	/// <para />Class Name: TCIRCUIT_HIST
	/// <para />Is View: False
	/// </summary>
	public static readonly CircuitHistTable CircuitHist = new CircuitHistTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_TESTBOARD
	/// <para />Class Name: TEQP_TESTBOARD
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpTestboardTable EqpTestboard = new EqpTestboardTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TCOMMENT
	/// <para />Class Name: TCOMMENT
	/// <para />Is View: False
	/// </summary>
	public static readonly CommentTable Comment = new CommentTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TCT_TEST_RESULTS
	/// <para />Class Name: TCT_TEST_RESULT
	/// <para />Is View: False
	/// </summary>
	public static readonly CtTestResultsTable CtTestResults = new CtTestResultsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TREFERENCE_INSTALL_HISTORY
	/// <para />Class Name: TREFERENCE_INSTALL_HISTORY
	/// <para />Is View: False
	/// </summary>
	public static readonly ReferenceInstallHistoryTable ReferenceInstallHistory = new ReferenceInstallHistoryTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TCUSTOM_FIELD_DESCRIPTIONS
	/// <para />Class Name: TCUSTOM_FIELD_DESCRIPTION
	/// <para />Is View: False
	/// </summary>
	public static readonly CustomFieldDescriptionsTable CustomFieldDescriptions = new CustomFieldDescriptionsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TREFERENCE_TEST_RESULTS
	/// <para />Class Name: TREFERENCE_TEST_RESULT
	/// <para />Is View: False
	/// </summary>
	public static readonly ReferenceTestResultsTable ReferenceTestResults = new ReferenceTestResultsTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_CT
	/// <para />Class Name: TEQP_CT
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpCtTable EqpCt = new EqpCtTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: tstandards_compare_sequence
	/// <para />Class Name: tstandards_compare_sequence
	/// <para />Is View: False
	/// </summary>
	public static readonly StandardsCompareSequenceTable StandardsCompareSequence = new StandardsCompareSequenceTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_CT_HIST
	/// <para />Class Name: TEQP_CT_HIST
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpCtHistTable EqpCtHist = new EqpCtHistTable();	
	/// <summary>
	/// <para />Schema: wndba
	/// <para />Table Name: TEQP_METER
	/// <para />Class Name: TEQP_METER
	/// <para />Is View: False
	/// </summary>
	public static readonly EqpMeterTable EqpMeter = new EqpMeterTable();	

	public static Dictionary<string, ITableInformation> TableLookup = new Dictionary<string, ITableInformation>() 
	{
				{TransactionLogState.RealTableName, TransactionLogState},
				{VersionInfo.RealTableName, VersionInfo},
				{TransactionType.RealTableName, TransactionType},
				{TransactionStatus.RealTableName, TransactionStatus},
				{TransactionState.RealTableName, TransactionState},
				{TransactionSource.RealTableName, TransactionSource},
				{ServiceType.RealTableName, ServiceType},
				{Company.RealTableName, Company},
				{Device.RealTableName, Device},
				{DeviceTest.RealTableName, DeviceTest},
				{TransactionLog.RealTableName, TransactionLog},
				{Migrationhistory.RealTableName, Migrationhistory},
				{SysValidation.RealTableName, SysValidation},
				{FirmwareLabel.RealTableName, FirmwareLabel},
				{ListenerConfig.RealTableName, ListenerConfig},
				{BarcodeCt.RealTableName, BarcodeCt},
				{Tracking.RealTableName, Tracking},
				{BarcodePt.RealTableName, BarcodePt},
				{TrackingIn.RealTableName, TrackingIn},
				{ListenerTransactionLog.RealTableName, ListenerTransactionLog},
				{TrackingOut.RealTableName, TrackingOut},
				{ListenerTransactionSource.RealTableName, ListenerTransactionSource},
				{LotPercentDef.RealTableName, LotPercentDef},
				{LotAcceptQualityLevel.RealTableName, LotAcceptQualityLevel},
				{ImportExportOptions.RealTableName, ImportExportOptions},
				{NewBatch.RealTableName, NewBatch},
				{EqpTransducerHist.RealTableName, EqpTransducerHist},
				{LotSizeLookup.RealTableName, LotSizeLookup},
				{ImportExportDefinitions.RealTableName, ImportExportDefinitions},
				{Pbcatcol.RealTableName, Pbcatcol},
				{EqpTotalizerHist.RealTableName, EqpTotalizerHist},
				{Pbcatfmt.RealTableName, Pbcatfmt},
				{Pbcatvld.RealTableName, Pbcatvld},
				{EqpTransducer.RealTableName, EqpTransducer},
				{Pbcatedt.RealTableName, Pbcatedt},
				{EqpTotalizer.RealTableName, EqpTotalizer},
				{Pbcattbl.RealTableName, Pbcattbl},
				{EqpRecorderHist.RealTableName, EqpRecorderHist},
				{EqpRecorder.RealTableName, EqpRecorder},
				{EqpPtHist.RealTableName, EqpPtHist},
				{EqpPt.RealTableName, EqpPt},
				{EqpMeterHist.RealTableName, EqpMeterHist},
				{Location.RealTableName, Location},
				{Tamper.RealTableName, Tamper},
				{Manufacturercode.RealTableName, Manufacturercode},
				{MeterCode.RealTableName, MeterCode},
				{EventTriggers.RealTableName, EventTriggers},
				{MeterEmulation.RealTableName, MeterEmulation},
				{TransformerCodeCt.RealTableName, TransformerCodeCt},
				{MeterPowerSetup.RealTableName, MeterPowerSetup},
				{TransformerCodePt.RealTableName, TransformerCodePt},
				{MeterTestResults.RealTableName, MeterTestResults},
				{SiteMetrics.RealTableName, SiteMetrics},
				{MeterTestSequence.RealTableName, MeterTestSequence},
				{SiteWiringCheck.RealTableName, SiteWiringCheck},
				{Mfr.RealTableName, Mfr},
				{MapWinboard2.RealTableName, MapWinboard2},
				{RmaBatchOut.RealTableName, RmaBatchOut},
				{Multimedia.RealTableName, Multimedia},
				{RmaEqp.RealTableName, RmaEqp},
				{Repair.RealTableName, Repair},
				{Owner.RealTableName, Owner},
				{Metadata.RealTableName, Metadata},
				{ProcessFlow.RealTableName, ProcessFlow},
				{PtTestResults.RealTableName, PtTestResults},
				{ReadSet.RealTableName, ReadSet},
				{Reading.RealTableName, Reading},
				{SampleList.RealTableName, SampleList},
				{SampleListArch.RealTableName, SampleListArch},
				{DefaultValues.RealTableName, DefaultValues},
				{SecurityGroups.RealTableName, SecurityGroups},
				{SecurityRights.RealTableName, SecurityRights},
				{SecurityUsers.RealTableName, SecurityUsers},
				{RedTag.RealTableName, RedTag},
				{SelectionProgram.RealTableName, SelectionProgram},
				{RedTagControl.RealTableName, RedTagControl},
				{SelectionProgramGroup.RealTableName, SelectionProgramGroup},
				{ShopGoals.RealTableName, ShopGoals},
				{ListenerTransactionState.RealTableName, ListenerTransactionState},
				{Site.RealTableName, Site},
				{ListenerTransactionStatistics.RealTableName, ListenerTransactionStatistics},
				{SiteComments.RealTableName, SiteComments},
				{ListenerTransactionStatus.RealTableName, ListenerTransactionStatus},
				{SiteHist.RealTableName, SiteHist},
				{ListenerTransactionType.RealTableName, ListenerTransactionType},
				{SiteMultimedia.RealTableName, SiteMultimedia},
				{SocketMapping.RealTableName, SocketMapping},
				{Status.RealTableName, Status},
				{ListenerConfigNotifications.RealTableName, ListenerConfigNotifications},
				{SysControl.RealTableName, SysControl},
				{TransducerTestResults.RealTableName, TransducerTestResults},
				{Barcode.RealTableName, Barcode},
				{MeterLimitSet.RealTableName, MeterLimitSet},
				{Validation.RealTableName, Validation},
				{BarcodeControl.RealTableName, BarcodeControl},
				{AuditLog.RealTableName, AuditLog},
				{Vendor.RealTableName, Vendor},
				{Kyz.RealTableName, Kyz},
				{VendorContact.RealTableName, VendorContact},
				{RmaBatchIn.RealTableName, RmaBatchIn},
				{HarmonicConfiguration.RealTableName, HarmonicConfiguration},
				{BarcodeLabel.RealTableName, BarcodeLabel},
				{Version.RealTableName, Version},
				{BarcodeLabelDef.RealTableName, BarcodeLabelDef},
				{HarmonicConfigData.RealTableName, HarmonicConfigData},
				{VersionHistory.RealTableName, VersionHistory},
				{Workstation.RealTableName, Workstation},
				{Circuit.RealTableName, Circuit},
				{TestCard.RealTableName, TestCard},
				{Ratio.RealTableName, Ratio},
				{EqpReference.RealTableName, EqpReference},
				{CircuitHist.RealTableName, CircuitHist},
				{EqpTestboard.RealTableName, EqpTestboard},
				{Comment.RealTableName, Comment},
				{CtTestResults.RealTableName, CtTestResults},
				{ReferenceInstallHistory.RealTableName, ReferenceInstallHistory},
				{CustomFieldDescriptions.RealTableName, CustomFieldDescriptions},
				{ReferenceTestResults.RealTableName, ReferenceTestResults},
				{EqpCt.RealTableName, EqpCt},
				{StandardsCompareSequence.RealTableName, StandardsCompareSequence},
				{EqpCtHist.RealTableName, EqpCtHist},
				{EqpMeter.RealTableName, EqpMeter},
			};

	public static readonly string ALL = "*";

	public static string C(params string[] columns) {
		return string.Join(", ", columns);
	}
}

public interface ITableInformation 
{
	string RealTableName {get;}
}

public class ColumnInformation 
{
	public string DataType { get; set; }
	public string ModelName { get; set; }
	public string ColumnName { get; set; }
}
}
#pragma warning restore 1591

