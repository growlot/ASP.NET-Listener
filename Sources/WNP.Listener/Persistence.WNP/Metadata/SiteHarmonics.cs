// <auto-generated>
#pragma warning disable 1591
using System.Collections.Generic;
namespace AMSLLC.Listener.Persistence.WNP.Metadata {
public class SiteHarmonicsTable: ITableInformation {
		/// <summary>
	/// <para />Database Type: int
	/// <para />Is Nullable: False
	/// <para />Is Primary Key: True
	/// </summary>
	public string Site { get; } = "site";
		/// <summary>
	/// <para />Database Type: DateTime
	/// <para />Is Nullable: False
	/// <para />Is Primary Key: False
	/// </summary>
	public string DateRead { get; } = "date_read";
		/// <summary>
	/// <para />Database Type: int
	/// <para />Is Nullable: False
	/// <para />Is Primary Key: False
	/// </summary>
	public string Owner { get; } = "owner";
		/// <summary>
	/// <para />Database Type: int
	/// <para />Is Nullable: False
	/// <para />Is Primary Key: False
	/// </summary>
	public string Harmonic { get; } = "harmonic";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string VaMag { get; } = "va_mag";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string VaPhase { get; } = "va_phase";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string VbMag { get; } = "vb_mag";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string VbPhase { get; } = "vb_phase";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string VcMag { get; } = "vc_mag";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string VcPhase { get; } = "vc_phase";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string IaMag { get; } = "ia_mag";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string IaPhase { get; } = "ia_phase";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string IbMag { get; } = "ib_mag";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string IbPhase { get; } = "ib_phase";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string IcMag { get; } = "ic_mag";
		/// <summary>
	/// <para />Database Type: double
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string IcPhase { get; } = "ic_phase";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string WecoSn { get; } = "weco_sn";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string StandardSn { get; } = "standard_sn";
	
	public string RealTableName
	{
		get { return "tsite_harmonics".ToUpperInvariant(); }		
	}

	public string FullTableName
	{
		get { return ToString(); }		
	}


	private Dictionary<string, ColumnInformation> columnsLookup = new Dictionary<string, ColumnInformation>() 
	{
				{"Site", new ColumnInformation() { DataType = "int", ModelName = "Site", ColumnName = "site"}},
				{"DateRead", new ColumnInformation() { DataType = "DateTime", ModelName = "DateRead", ColumnName = "date_read"}},
				{"Owner", new ColumnInformation() { DataType = "int", ModelName = "Owner", ColumnName = "owner"}},
				{"Harmonic", new ColumnInformation() { DataType = "int", ModelName = "Harmonic", ColumnName = "harmonic"}},
				{"VaMag", new ColumnInformation() { DataType = "double", ModelName = "VaMag", ColumnName = "va_mag"}},
				{"VaPhase", new ColumnInformation() { DataType = "double", ModelName = "VaPhase", ColumnName = "va_phase"}},
				{"VbMag", new ColumnInformation() { DataType = "double", ModelName = "VbMag", ColumnName = "vb_mag"}},
				{"VbPhase", new ColumnInformation() { DataType = "double", ModelName = "VbPhase", ColumnName = "vb_phase"}},
				{"VcMag", new ColumnInformation() { DataType = "double", ModelName = "VcMag", ColumnName = "vc_mag"}},
				{"VcPhase", new ColumnInformation() { DataType = "double", ModelName = "VcPhase", ColumnName = "vc_phase"}},
				{"IaMag", new ColumnInformation() { DataType = "double", ModelName = "IaMag", ColumnName = "ia_mag"}},
				{"IaPhase", new ColumnInformation() { DataType = "double", ModelName = "IaPhase", ColumnName = "ia_phase"}},
				{"IbMag", new ColumnInformation() { DataType = "double", ModelName = "IbMag", ColumnName = "ib_mag"}},
				{"IbPhase", new ColumnInformation() { DataType = "double", ModelName = "IbPhase", ColumnName = "ib_phase"}},
				{"IcMag", new ColumnInformation() { DataType = "double", ModelName = "IcMag", ColumnName = "ic_mag"}},
				{"IcPhase", new ColumnInformation() { DataType = "double", ModelName = "IcPhase", ColumnName = "ic_phase"}},
				{"WecoSn", new ColumnInformation() { DataType = "string", ModelName = "WecoSn", ColumnName = "weco_sn"}},
				{"StandardSn", new ColumnInformation() { DataType = "string", ModelName = "StandardSn", ColumnName = "standard_sn"}},
			};

	public override string ToString() 
	{
		return "WNDBA.TSITE_HARMONICS";
	}
}
}
#pragma warning restore 1591
