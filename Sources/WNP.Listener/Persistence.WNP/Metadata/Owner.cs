// <auto-generated>
#pragma warning disable 1591
using System.Collections.Generic;
namespace AMSLLC.Listener.Persistence.WNP.Metadata {
public class OwnerTable: ITableInformation {
		/// <summary>
	/// <para />Database Type: int
	/// <para />Is Nullable: False
	/// <para />Is Primary Key: True
	/// </summary>
	public string Owner { get; } = "OWNER";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string OwnerDesc { get; } = "OWNER_DESC";
		/// <summary>
	/// <para />Database Type: DateTime
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string ModDate { get; } = "MOD_DATE";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string ModBy { get; } = "MOD_BY";
		/// <summary>
	/// <para />Database Type: byte[]
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string CompanyLogo { get; } = "COMPANY_LOGO";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string WaFormula1p { get; } = "wa_formula_1p";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string WaFormula3p { get; } = "wa_formula_3p";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string BalanceAf { get; } = "balance_af";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string BalanceAl { get; } = "balance_al";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string UseAcceptanceTesting { get; } = "use_acceptance_testing";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string AcceptanceListSource { get; } = "acceptance_list_source";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string MeterCodeIsLookup { get; } = "meter_code_is_lookup";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string UseRmaAcceptTesting { get; } = "use_rma_accept_testing";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string RmaAcceptListSource { get; } = "rma_accept_list_source";
		/// <summary>
	/// <para />Database Type: int
	/// <para />Is Nullable: False
	/// <para />Is Primary Key: False
	/// </summary>
	public string Id { get; } = "ID";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string InspectLevel { get; } = "inspect_level";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string Aql { get; } = "aql";
		/// <summary>
	/// <para />Database Type: string
	/// <para />Is Nullable: True
	/// <para />Is Primary Key: False
	/// </summary>
	public string EnableSiteAutosnapshot { get; } = "enable_site_autosnapshot";
	
	public string RealTableName
	{
		get { return "TOWNER".ToUpperInvariant(); }		
	}

	public string FullTableName
	{
		get { return ToString(); }		
	}


	private Dictionary<string, ColumnInformation> columnsLookup = new Dictionary<string, ColumnInformation>() 
	{
				{"Owner", new ColumnInformation() { DataType = "int", ModelName = "Owner", ColumnName = "OWNER"}},
				{"OwnerDesc", new ColumnInformation() { DataType = "string", ModelName = "OwnerDesc", ColumnName = "OWNER_DESC"}},
				{"ModDate", new ColumnInformation() { DataType = "DateTime", ModelName = "ModDate", ColumnName = "MOD_DATE"}},
				{"ModBy", new ColumnInformation() { DataType = "string", ModelName = "ModBy", ColumnName = "MOD_BY"}},
				{"CompanyLogo", new ColumnInformation() { DataType = "byte[]", ModelName = "CompanyLogo", ColumnName = "COMPANY_LOGO"}},
				{"WaFormula1p", new ColumnInformation() { DataType = "string", ModelName = "WaFormula1p", ColumnName = "wa_formula_1p"}},
				{"WaFormula3p", new ColumnInformation() { DataType = "string", ModelName = "WaFormula3p", ColumnName = "wa_formula_3p"}},
				{"BalanceAf", new ColumnInformation() { DataType = "string", ModelName = "BalanceAf", ColumnName = "balance_af"}},
				{"BalanceAl", new ColumnInformation() { DataType = "string", ModelName = "BalanceAl", ColumnName = "balance_al"}},
				{"UseAcceptanceTesting", new ColumnInformation() { DataType = "string", ModelName = "UseAcceptanceTesting", ColumnName = "use_acceptance_testing"}},
				{"AcceptanceListSource", new ColumnInformation() { DataType = "string", ModelName = "AcceptanceListSource", ColumnName = "acceptance_list_source"}},
				{"MeterCodeIsLookup", new ColumnInformation() { DataType = "string", ModelName = "MeterCodeIsLookup", ColumnName = "meter_code_is_lookup"}},
				{"UseRmaAcceptTesting", new ColumnInformation() { DataType = "string", ModelName = "UseRmaAcceptTesting", ColumnName = "use_rma_accept_testing"}},
				{"RmaAcceptListSource", new ColumnInformation() { DataType = "string", ModelName = "RmaAcceptListSource", ColumnName = "rma_accept_list_source"}},
				{"Id", new ColumnInformation() { DataType = "int", ModelName = "Id", ColumnName = "ID"}},
				{"InspectLevel", new ColumnInformation() { DataType = "string", ModelName = "InspectLevel", ColumnName = "inspect_level"}},
				{"Aql", new ColumnInformation() { DataType = "string", ModelName = "Aql", ColumnName = "aql"}},
				{"EnableSiteAutosnapshot", new ColumnInformation() { DataType = "string", ModelName = "EnableSiteAutosnapshot", ColumnName = "enable_site_autosnapshot"}},
			};

	public override string ToString() 
	{
		return "WNDBA.TOWNER";
	}
}
}
#pragma warning restore 1591
